# Package Managers Context
# Granular control over individual package managers

# Show available package manager commands
default:
    @echo "📦 Package Managers - Granular Control"
    @echo ""
    @echo "🖥️ System Package Managers:"
    @echo "  just install-brew          - Install Homebrew packages"
    @echo "  just check-brew            - Check Homebrew for updates"
    @echo "  just upgrade-brew          - Upgrade Homebrew packages"
    @echo "  just install-apt           - Install APT packages (Ubuntu)"
    @echo "  just install-pacman        - Install Pacman packages (Arch)"
    @echo ""
    @echo "🔧 Development Package Managers:"
    @echo "  just install-npm           - Install npm packages"
    @echo "  just check-npm             - Check npm for updates"
    @echo "  just upgrade-npm           - Upgrade npm packages"
    @echo "  just install-pip           - Install Python packages"
    @echo "  just check-pip             - Check pip for updates"
    @echo "  just upgrade-pip           - Upgrade pip packages"
    @echo "  just install-cargo         - Install Rust packages"
    @echo "  just install-gem           - Install Ruby gems"
    @echo ""
    @echo "📱 Application Package Managers:"
    @echo "  just install-emacs         - Install Emacs packages"
    @echo "  just install-zinit         - Install Zsh plugins"
    @echo "  just install-neovim        - Install Neovim plugins"
    @echo ""
    @echo "📊 Information:"
    @echo "  just show-package-list     - Full package list for machine class"
    @echo "  just show-package-stats    - Package counts summary"
    @echo "  just export-packages       - Export installed packages"
    @echo ""
    @echo "🔄 Return to main: exit"

# ═══════════════════════════════════════════════════════════════════════════════
# System Package Managers
# ═══════════════════════════════════════════════════════════════════════════════

# Install Homebrew packages (all levels)
install-brew:
    @cd .. && python3 -m src.dotfiles_pm.pm install brew

# Install Homebrew packages (admin level)
install-brew-admin:
    @cd .. && python3 -m src.dotfiles_pm.pm install brew --level admin

# Install Homebrew packages (user level)
install-brew-user:
    @cd .. && python3 -m src.dotfiles_pm.pm install brew --level user

# Check Homebrew for updates
check-brew:
    @cd .. && python3 -m src.dotfiles_pm.pm check brew

# Upgrade Homebrew packages
upgrade-brew:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade brew

# Install APT packages (Ubuntu)
install-apt:
    @cd .. && python3 -m src.dotfiles_pm.pm install apt

# Check APT for updates
check-apt:
    @cd .. && python3 -m src.dotfiles_pm.pm check apt

# Upgrade APT packages
upgrade-apt:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade apt

# Install Pacman packages (Arch)
install-pacman:
    @cd .. && python3 -m src.dotfiles_pm.pm install pacman

# Check Pacman for updates
check-pacman:
    @cd .. && python3 -m src.dotfiles_pm.pm check pacman

# Upgrade Pacman packages
upgrade-pacman:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade pacman

# ═══════════════════════════════════════════════════════════════════════════════
# Development Package Managers
# ═══════════════════════════════════════════════════════════════════════════════

# Install npm packages
install-npm:
    @cd .. && python3 -m src.dotfiles_pm.pm install npm

# Check npm for updates
check-npm:
    @cd .. && python3 -m src.dotfiles_pm.pm check npm

# Upgrade npm packages
upgrade-npm:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade npm

# Install Python packages
install-pip:
    @cd .. && python3 -m src.dotfiles_pm.pm install pip

# Check pip for updates
check-pip:
    @cd .. && python3 -m src.dotfiles_pm.pm check pip

# Upgrade pip packages
upgrade-pip:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade pip

# Install Rust packages
install-cargo:
    @cd .. && python3 -m src.dotfiles_pm.pm install cargo

# Check cargo for updates
check-cargo:
    @cd .. && python3 -m src.dotfiles_pm.pm check cargo

# Upgrade cargo packages
upgrade-cargo:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade cargo

# Install Ruby gems
install-gem:
    @cd .. && python3 -m src.dotfiles_pm.pm install gem

# Check gem for updates
check-gem:
    @cd .. && python3 -m src.dotfiles_pm.pm check gem

# Upgrade gem packages
upgrade-gem:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade gem

# ═══════════════════════════════════════════════════════════════════════════════
# Application Package Managers
# ═══════════════════════════════════════════════════════════════════════════════

# Install Emacs packages
install-emacs:
    @cd .. && python3 -m src.dotfiles_pm.pm install emacs

# Check Emacs packages
check-emacs:
    @cd .. && python3 -m src.dotfiles_pm.pm check emacs

# Upgrade Emacs packages
upgrade-emacs:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade emacs

# Install Zsh plugins
install-zinit:
    @cd .. && python3 -m src.dotfiles_pm.pm install zinit

# Check Zsh plugins
check-zinit:
    @cd .. && python3 -m src.dotfiles_pm.pm check zinit

# Upgrade Zsh plugins
upgrade-zinit:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade zinit

# Install Neovim plugins
install-neovim:
    @cd .. && python3 -m src.dotfiles_pm.pm install neovim

# Check Neovim plugins
check-neovim:
    @cd .. && python3 -m src.dotfiles_pm.pm check neovim

# Upgrade Neovim plugins
upgrade-neovim:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade neovim

# ═══════════════════════════════════════════════════════════════════════════════
# Information & Export
# ═══════════════════════════════════════════════════════════════════════════════

# Show full list of packages configured for current machine class
show-package-list:
    @cd .. && ./scripts/package-management/show-packages.sh

# Show package counts summary
show-package-stats:
    @cd .. && ./scripts/package-management/show-package-stats.sh

# Export current system packages and update machine class
export-packages:
    @cd .. && ./scripts/package-management/export-packages.sh

# ═══════════════════════════════════════════════════════════════════════════════
# Legacy System/Dev/App Categories (may remove later)
# ═══════════════════════════════════════════════════════════════════════════════

# Install all system packages
install-system:
    @cd .. && python3 -m src.dotfiles_pm.pm install --category system

# Check all system packages
check-system:
    @cd .. && python3 -m src.dotfiles_pm.pm check brew apt pacman choco winget scoop

# Upgrade all system packages
upgrade-system:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade brew apt pacman choco winget scoop

# Install all dev packages
install-dev:
    @cd .. && python3 -m src.dotfiles_pm.pm install --category dev

# Check all dev packages
check-dev:
    @cd .. && python3 -m src.dotfiles_pm.pm check npm pip pipx cargo gem

# Upgrade all dev packages
upgrade-dev:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade npm pip pipx cargo gem

# Install all app packages
install-app:
    @cd .. && python3 -m src.dotfiles_pm.pm install --category app

# Check all app packages
check-app:
    @cd .. && python3 -m src.dotfiles_pm.pm check emacs zinit neovim

# Upgrade all app packages
upgrade-app:
    @cd .. && python3 -m src.dotfiles_pm.pm upgrade emacs zinit neovim
