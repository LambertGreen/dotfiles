# Use direnv layout for proper Python version control
if command -v pyenv >/dev/null 2>&1 && pyenv versions --bare | grep -qx "3.9.18"; then
    layout pyenv 3.9.18
else
    echo "direnv: required pyenv Python 3.9.18 is not installed. Run: pyenv install 3.9.18" >&2
    exit 1
fi

# Install/update requirements if needed
if [ -n "$VIRTUAL_ENV" ] && [ -f requirements.txt ]; then
    if [ ! -f "$VIRTUAL_ENV/.requirements-installed" ] || [ requirements.txt -nt "$VIRTUAL_ENV/.requirements-installed" ]; then
        echo "📦 Installing Python requirements..."
        pip install -r requirements.txt
        touch "$VIRTUAL_ENV/.requirements-installed"
    fi
fi

# Install pre-commit hooks if available
if command -v pre-commit >/dev/null 2>&1; then
    if [ ! -f .git/hooks/pre-commit ] || ! grep -q "pre-commit" .git/hooks/pre-commit; then
        echo "📋 Installing pre-commit hooks..."
        pre-commit install
    fi
fi

# Load local environment variables (secrets)
if [ -f .envrc.local ]; then
    echo "🔐 Loading local environment variables..."
    source .envrc.local
fi
