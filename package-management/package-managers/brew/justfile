#!/usr/bin/env just --justfile
# Homebrew Package Manager Commands
# Documentation and execution for brew/cask/mas operations

set shell := ["bash", "-uc"]

# Default: show available commands
default:
    @echo "🍺 Homebrew Package Manager"
    @echo ""
    @echo "📦 Basic Operations:"
    @echo "  just install           # Install packages from current machine class"
    @echo "  just check             # Check for outdated packages"
    @echo "  just upgrade           # Upgrade all packages"
    @echo "  just clean             # Clean up caches and old versions"
    @echo ""
    @echo "📋 Information:"
    @echo "  just list              # List installed packages"
    @echo "  just search <package>  # Search for packages"
    @echo "  just info <package>    # Get package information"
    @echo ""
    @echo "🔧 Advanced:"
    @echo "  just export            # Export current packages to Brewfile"
    @echo "  just fix-links         # Fix broken symlinks"
    @echo "  just doctor            # Run brew doctor"
    @echo ""
    @echo "💡 Cask Operations:"
    @echo "  just cask-list         # List installed casks"
    @echo "  just cask-search <app> # Search for applications"

# Install packages from current machine class
install:
    @if [[ -f ~/.dotfiles.env ]]; then \
        source ~/.dotfiles.env; \
        brewfile="$(pwd)/../../machines/$DOTFILES_MACHINE_CLASS/brew/Brewfile"; \
        if [[ -f "$brewfile" ]]; then \
            echo "🍺 Installing packages from: $brewfile"; \
            brew bundle install --file="$brewfile" --no-upgrade; \
        else \
            echo "❌ No Brewfile found for machine class: $DOTFILES_MACHINE_CLASS"; \
        fi; \
    else \
        echo "❌ Configuration not found. Run: just configure"; \
    fi

# Check for outdated packages
check:
    @echo "🔍 Checking for outdated Homebrew packages..."
    @brew outdated || echo "✅ All packages are up to date"
    @echo ""
    @echo "🔍 Checking for outdated casks..."
    @brew outdated --cask || echo "✅ All casks are up to date"

# Upgrade all packages
upgrade:
    @echo "🔄 Upgrading Homebrew packages..."
    @if brew update --quiet 2>/dev/null; then \
        echo "✅ Repository updated"; \
    else \
        echo "⚠️  Update locked, continuing with existing data..."; \
    fi
    @brew upgrade --quiet
    @brew cleanup --quiet
    @echo "✅ Upgrade complete"

# Clean up caches and old versions
clean:
    @echo "🧹 Cleaning Homebrew..."
    @brew cleanup -s
    @brew cleanup --prune=all
    @echo "✅ Cleanup complete"

# List installed packages
list:
    @echo "🍺 Installed formulae:"
    @brew leaves | sort
    @echo ""
    @echo "📱 Installed casks:"
    @brew list --cask | sort

# Search for packages
search package:
    @echo "🔍 Searching for: {{package}}"
    @brew search {{package}}

# Get package information  
info package:
    @echo "ℹ️  Information for: {{package}}"
    @brew info {{package}}

# Export current packages to Brewfile
export:
    @echo "📦 Exporting current Homebrew packages..."
    @brew bundle dump --force --describe
    @echo "✅ Exported to ./Brewfile"
    @echo ""
    @echo "💡 To use this Brewfile:"
    @echo "  brew bundle install --file=./Brewfile"

# Fix broken symlinks
fix-links:
    @echo "🔧 Fixing broken symlinks..."
    @brew doctor --list-checks | grep -E "(symlink|link)" | xargs -I {} brew doctor --check={}
    @echo "✅ Link check complete"

# Run brew doctor
doctor:
    @echo "🏥 Running brew doctor..."
    @brew doctor

# List installed casks
cask-list:
    @echo "📱 Installed applications (casks):"
    @brew list --cask | sort

# Search for applications
cask-search app:
    @echo "🔍 Searching for application: {{app}}"
    @brew search --cask {{app}}

# Common package operations with memorable syntax
install-package package:
    @echo "🍺 Installing: {{package}}"
    @brew install {{package}}

install-app app:
    @echo "📱 Installing application: {{app}}"
    @brew install --cask {{app}}

remove-package package:
    @echo "🗑️  Removing: {{package}}"
    @brew uninstall {{package}}

remove-app app:
    @echo "🗑️  Removing application: {{app}}"
    @brew uninstall --cask {{app}}