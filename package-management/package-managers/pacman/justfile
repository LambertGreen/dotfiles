#!/usr/bin/env just --justfile
# Pacman Package Manager Commands (Arch Linux)
# Documentation and execution for pacman operations

set shell := ["bash", "-uc"]

# Default: show available commands
default:
    @echo "📦 Pacman Package Manager (Arch Linux)"
    @echo ""
    @echo "📦 Basic Operations:"
    @echo "  just install           # Install packages from current machine class"
    @echo "  just check             # Check for available updates"
    @echo "  just upgrade           # Upgrade all packages"
    @echo "  just clean             # Clean package cache"
    @echo ""
    @echo "📋 Information:"
    @echo "  just list              # List installed packages"
    @echo "  just search <package>  # Search for packages"
    @echo "  just info <package>    # Get package information"
    @echo ""
    @echo "🔧 Advanced:"
    @echo "  just export            # Export current packages"
    @echo "  just orphans           # Find orphaned packages"
    @echo "  just aur               # AUR helper commands (yay)"
    @echo ""
    @echo "💡 Pacman Tips:"
    @echo "  - Most operations require sudo"
    @echo "  - Use yay for AUR packages"
    @echo "  - -Syu updates system, -S installs"

# Install packages from current machine class
install:
    @if [[ -f ~/.dotfiles.env ]]; then \
        source ~/.dotfiles.env; \
        packages_file="$(pwd)/../../machines/$DOTFILES_MACHINE_CLASS/pacman/packages.txt"; \
        if [[ -f "$packages_file" ]]; then \
            echo "📦 Installing packages from: $packages_file"; \
            sudo pacman -Sy; \
            while IFS= read -r package; do \
                if [[ -n "$package" && ! "$package" =~ ^#.* ]]; then \
                    echo "Installing: $package"; \
                    sudo pacman -S --noconfirm "$package"; \
                fi; \
            done < "$packages_file"; \
        else \
            echo "❌ No packages.txt found for machine class: $DOTFILES_MACHINE_CLASS"; \
        fi; \
    else \
        echo "❌ Configuration not found. Run: just configure"; \
    fi

# Check for available updates
check:
    @echo "🔍 Checking for available updates..."
    @sudo pacman -Sy
    @pacman -Qu || echo "✅ All packages are up to date"

# Upgrade all packages
upgrade:
    @echo "🔄 Upgrading all packages..."
    @sudo pacman -Syu
    @echo "✅ Upgrade complete"

# Clean package cache
clean:
    @echo "🧹 Cleaning package cache..."
    @sudo pacman -Sc --noconfirm
    @echo "✅ Cache cleaned"

# List installed packages
list:
    @echo "📦 Installed packages:"
    @pacman -Q | head -20
    @echo "... (showing first 20, use 'pacman -Q' for all)"

# Search for packages
search package:
    @echo "🔍 Searching for: {{package}}"
    @pacman -Ss {{package}} | head -10

# Get package information
info package:
    @echo "ℹ️  Information for: {{package}}"
    @pacman -Si {{package}} 2>/dev/null || pacman -Qi {{package}} 2>/dev/null

# Export current packages
export:
    @echo "📦 Exporting currently installed packages..."
    @pacman -Qqe > pacman-packages.txt
    @echo "✅ Exported to ./pacman-packages.txt"
    @echo ""
    @echo "💡 To install from this list:"
    @echo "  sudo pacman -S --needed - < pacman-packages.txt"

# Find orphaned packages
orphans:
    @echo "🔍 Finding orphaned packages..."
    @pacman -Qtdq 2>/dev/null || echo "✅ No orphaned packages found"
    @echo ""
    @echo "💡 To remove orphans: sudo pacman -Rns \$(pacman -Qtdq)"

# AUR helper commands (yay)
aur:
    @echo "🔧 AUR Helper (yay) Commands:"
    @echo "  just aur-install <package>  # Install AUR package"
    @echo "  just aur-search <package>   # Search AUR"
    @echo "  just aur-upgrade            # Upgrade AUR packages"
    @echo "  just aur-clean              # Clean AUR cache"
    @echo ""
    @if command -v yay >/dev/null 2>&1; then \
        echo "✅ yay is installed"; \
    else \
        echo "❌ yay not installed. Install with:"; \
        echo "  git clone https://aur.archlinux.org/yay.git && cd yay && makepkg -si"; \
    fi

# Common package operations
install-package package:
    @echo "📦 Installing: {{package}}"
    @sudo pacman -S {{package}}

remove-package package:
    @echo "🗑️  Removing: {{package}}"
    @sudo pacman -Rs {{package}}

# AUR operations (if yay is available)
aur-install package:
    @if command -v yay >/dev/null 2>&1; then \
        echo "📦 Installing AUR package: {{package}}"; \
        yay -S {{package}}; \
    else \
        echo "❌ yay not installed"; \
    fi

aur-search package:
    @if command -v yay >/dev/null 2>&1; then \
        echo "🔍 Searching AUR for: {{package}}"; \
        yay -Ss {{package}} | head -10; \
    else \
        echo "❌ yay not installed"; \
    fi

aur-upgrade:
    @if command -v yay >/dev/null 2>&1; then \
        echo "🔄 Upgrading AUR packages..."; \
        yay -Sua; \
    else \
        echo "❌ yay not installed"; \
    fi

aur-clean:
    @if command -v yay >/dev/null 2>&1; then \
        echo "🧹 Cleaning AUR cache..."; \
        yay -Sc; \
    else \
        echo "❌ yay not installed"; \
    fi

# Show package dependencies
deps package:
    @echo "🔗 Dependencies for: {{package}}"
    @pacman -Si {{package}} | grep "Depends On"

# Show which package owns a file
owns file:
    @echo "🔍 Finding package that owns: {{file}}"
    @pacman -Qo {{file}}