#!/usr/bin/env just --justfile
# Cargo Package Manager Commands (Rust)
# Documentation and execution for Rust package operations

set shell := ["bash", "-uc"]

# Default: show available commands
default:
    @echo "🦀 Cargo Package Manager (Rust)"
    @echo ""
    @echo "📦 Basic Operations:"
    @echo "  just install           # Install packages from current machine class"
    @echo "  just check             # Check for outdated packages"
    @echo "  just upgrade           # Upgrade all packages"
    @echo "  just clean             # Clean cargo cache"
    @echo ""
    @echo "📋 Information:"
    @echo "  just list              # List installed packages"
    @echo "  just search <package>  # Search for packages"
    @echo "  just info <package>    # Get package information"
    @echo ""
    @echo "🔧 Advanced:"
    @echo "  just export            # Export current packages"
    @echo "  just audit             # Run security audit"
    @echo ""
    @echo "💡 Cargo Tips:"
    @echo "  - Installs binaries to ~/.cargo/bin"
    @echo "  - Use 'cargo install-update -a' to update all"
    @echo "  - Requires cargo-update crate for upgrades"

# Install packages from current machine class
install:
    @if [[ -f ~/.dotfiles.env ]]; then \
        source ~/.dotfiles.env; \
        packages_file="$(pwd)/../../machines/$DOTFILES_MACHINE_CLASS/cargo/packages.txt"; \
        if [[ -f "$packages_file" ]]; then \
            echo "🦀 Installing packages from: $packages_file"; \
            while IFS= read -r package; do \
                if [[ -n "$package" && ! "$package" =~ ^#.* ]]; then \
                    echo "Installing: $package"; \
                    cargo install "$package"; \
                fi; \
            done < "$packages_file"; \
        else \
            echo "❌ No packages.txt found for machine class: $DOTFILES_MACHINE_CLASS"; \
        fi; \
    else \
        echo "❌ Configuration not found. Run: just configure"; \
    fi

# Check for outdated packages
check:
    @echo "🔍 Checking for outdated Rust packages..."
    @if command -v cargo-outdated >/dev/null 2>&1; then \
        cargo outdated; \
    else \
        echo "💡 Install cargo-outdated for this feature: cargo install cargo-outdated"; \
    fi

# Upgrade all packages
upgrade:
    @echo "🔄 Upgrading all Rust packages..."
    @if command -v cargo-install-update >/dev/null 2>&1; then \
        cargo install-update -a; \
    else \
        echo "💡 Install cargo-update for this feature: cargo install cargo-update"; \
    fi

# Clean cargo cache
clean:
    @echo "🧹 Cleaning cargo cache..."
    @cargo clean
    @echo "✅ Cache cleaned"

# List installed packages
list:
    @echo "🦀 Installed Rust packages:"
    @cargo install --list | grep -E "^[a-zA-Z]" | sed 's/ v.*://' || echo "No packages installed"

# Search for packages
search package:
    @echo "🔍 Searching for: {{package}}"
    @echo "🌐 Visit: https://crates.io/search?q={{package}}"
    @echo "💡 Use 'cargo search {{package}}' for CLI search"

# Get package information
info package:
    @echo "ℹ️  Information for: {{package}}"
    @cargo search {{package}} | head -5

# Export current packages
export:
    @echo "📦 Exporting current Rust packages..."
    @cargo install --list | grep -E "^[a-zA-Z]" | sed 's/ v.*//' > cargo-packages.txt
    @echo "✅ Exported to ./cargo-packages.txt"
    @echo ""
    @echo "💡 To install from this list:"
    @echo "  cat cargo-packages.txt | xargs -I {} cargo install {}"

# Run security audit
audit:
    @echo "🔍 Running security audit..."
    @if command -v cargo-audit >/dev/null 2>&1; then \
        cargo audit; \
    else \
        echo "💡 Install cargo-audit for this feature: cargo install cargo-audit"; \
    fi

# Common package operations
install-package package:
    @echo "🦀 Installing: {{package}}"
    @cargo install {{package}}

remove-package package:
    @echo "🗑️  Removing: {{package}}"
    @cargo uninstall {{package}}

# Update cargo itself
update-cargo:
    @echo "🔄 Updating cargo..."
    @rustup update

# Show cargo configuration
config:
    @echo "⚙️  Cargo configuration:"
    @echo "Cargo home: ${CARGO_HOME:-~/.cargo}"
    @echo "Rust toolchain: $(rustc --version)"
    @echo "Cargo version: $(cargo --version)"