#!/usr/bin/env bash
# Pre-commit hook to detect and prevent committing sensitive tokens

# Color codes for output
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Patterns to detect (case-insensitive)
PATTERNS=(
    "sk-ant-[a-zA-Z0-9_-]+"                    # Anthropic API keys
    "CLAUDE_CODE_OAUTH_TOKEN=['\"]?[a-zA-Z0-9_-]+"  # Claude OAuth tokens
    "github_pat_[a-zA-Z0-9_-]+"                # GitHub Personal Access Tokens
    "ghp_[a-zA-Z0-9_-]+"                       # GitHub tokens (old format)
    "gho_[a-zA-Z0-9_-]+"                       # GitHub OAuth tokens
    "ghu_[a-zA-Z0-9_-]+"                       # GitHub user tokens
    "ghs_[a-zA-Z0-9_-]+"                       # GitHub server tokens
    "ghr_[a-zA-Z0-9_-]+"                       # GitHub refresh tokens
    "[a-zA-Z0-9_-]{20,}@[a-zA-Z0-9_-]+\\.iam\.gserviceaccount\.com"  # GCP service account
    "AKIA[0-9A-Z]{16}"                         # AWS Access Key ID
    "-----BEGIN.*(RSA|DSA|EC|OPENSSH).*PRIVATE KEY-----"  # Private keys
    "xox[pboa]-[0-9]{12}-[0-9]{12}-[a-zA-Z0-9]{24}"  # Slack tokens
    "AIza[0-9A-Za-z_-]{35}"                    # Google API key
)

echo "üîç Scanning staged files for sensitive tokens..."

# Get list of staged files
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACM)

if [ -z "$STAGED_FILES" ]; then
    echo "‚úÖ No files to check"
    exit 0
fi

FOUND_SECRETS=0

# Check each staged file
for FILE in $STAGED_FILES; do
    # Skip this pre-commit hook itself and any files in hooks/ directory
    if [[ "$FILE" == *"hooks/pre-commit"* ]] || [[ "$FILE" == *".git/hooks/"* ]]; then
        continue
    fi

    # Skip binary files (shown as "-  -" in numstat)
    if git diff --cached --numstat "$FILE" | grep -q "^-.*-"; then
        continue
    fi

    # Get the staged content of the file
    CONTENT=$(git diff --cached "$FILE" 2>/dev/null)

    if [ -z "$CONTENT" ]; then
        continue
    fi

    # Check against each pattern
    for PATTERN in "${PATTERNS[@]}"; do
        # Use grep with case-insensitive, perl regex
        # Check only the added lines (starting with +)
        # Use -- to separate options from pattern in case pattern starts with -
        MATCHES=$(echo "$CONTENT" | grep "^+" | grep -v "^+++" | grep -iP -- "$PATTERN" || true)

        if [ -n "$MATCHES" ]; then
            if [ $FOUND_SECRETS -eq 0 ]; then
                echo ""
                echo -e "${RED}‚ùå COMMIT BLOCKED: Sensitive tokens detected!${NC}"
                echo ""
            fi

            FOUND_SECRETS=1
            echo -e "${YELLOW}File: $FILE${NC}"
            echo "Pattern: $PATTERN"
            echo "Match:"
            echo "$MATCHES" | head -3
            echo ""
        fi
    done
done

if [ $FOUND_SECRETS -eq 1 ]; then
    echo -e "${RED}================================================${NC}"
    echo -e "${RED}COMMIT REJECTED${NC}"
    echo -e "${RED}================================================${NC}"
    echo ""
    echo "Please remove sensitive tokens before committing."
    echo ""
    echo "Options:"
    echo "  1. Remove the tokens from the files"
    echo "  2. Move tokens to environment variables or separate config files"
    echo "  3. Add files with tokens to .gitignore"
    echo "  4. Use git-secret or similar tools for encrypted secrets"
    echo ""
    echo "To bypass this check (NOT RECOMMENDED):"
    echo "  git commit --no-verify"
    echo ""
    exit 1
fi

echo "‚úÖ No sensitive tokens detected"
exit 0
