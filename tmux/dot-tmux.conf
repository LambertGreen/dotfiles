# General settings {{{

# Enable titles so that fuzzy window switching by title is easier
set -g set-titles on

# W: window, S: session, H: hostname
set -g set-titles-string '#W | #S ðŸ’»  #H'

setw -g monitor-activity on
# Setting mouse on is great for using the mouse to resize splits
# but it seems to interfere with copy mode when using iTerm\SSH\Tmux.
# Commenting out below as I test this so long.
# It is nice to have the mouse setting on for local iTerm/Tmux.
# The question remains about having SSH in the mix.
set -g mouse on

set -g focus-events on
setw -g mode-keys vi
setw -g allow-rename off

# Set long enough history
set -g history-limit 500000
set -g history-file ~/.tmux_history

# Set the delay so that it doesn't interfere with applications like Vim
set -sg escape-time 0

# Add 24bit color support
# To use 'tmux-256color' additional setup is required
# (see https://gist.github.com/bbqtd/a4ac060d6f6b9ea6fe3aabe735aa9d95)
set -g default-terminal 'tmux-256color'
set -ga terminal-overrides ',*256col*:Tc'
# }}}

# Key bindings {{{
# Finally giving in and remapping prefix from <C-b> to <C-a>
# The main reason is that <C-b> is the Readline keybind to go back one character
# which requires lots of spamming to use it under Tmux (since we have to press it twice).
# On the other hand <C-a> is the Readline keybind to go to beginning of sentence, and
# hence is not needed to be spammed.
unbind C-b
set -g prefix C-a
bind-key C-a send-prefix

# Reload tmux config
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# Toggle the status bar
bind-key h set-option -g status

# Install plugins
# Set by tpm: <prefix>+I, to install plugins

# Additonal Vim like key bindings
# Vim like text selection
bind-key -T copy-mode-vi v   send -X begin-selection
bind-key -T copy-mode-vi V   send -X select-line
bind-key -T copy-mode-vi C-v send -X rectangle-toggle
bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel
bind-key P paste-buffer
# Vim like yanking is handled by plugin tmux-yank
# }}}

# Os specific settings {{{
#
# TODO: Setup PATH correctly outside of TMUX, and maybe check
# and assert on failure
#
# Ensure that PATH contains Tmux because TPM will try and invoke
# Tmux and will fail with error 127 if it is not found.
# if-shell "uname | grep -q Darwin" {
#    set-environment -g PATH /usr/local/bin:/opt/homebrew/bin:/bin:/usr/bin
# } {
#    set-environment -g PATH /usr/local/bin:/bin:/usr/bin
# }
# }}}

# GUI/Theme/Colors {{{
#
# Set status bar on top
set -g status-position top

# Set background to default so that
# the mode-line will match the terminal's light/dark mode
# color.
set -g status-style bg=default

set -g @catppuccin_flavour 'latte' # or frappe, macchiato, mocha

# }}}

# Load any local config {{{
#
# Check for a local file that has theme settings
# I use local files to enable specific theme colors per machine
# for ease of identifying the host that I an working on.
#
run-shell "if [ ! -f ~/.tmux.local.conf ]; then echo set -g @catppuccin_flavour 'latte' > .tmux.local.conf; fi"
source-file ~/.tmux.local.conf
# }}}

# Tmux plugins {{{
setenv -g TMUX_PLUGIN_MANAGER_PATH '$HOME/.tmux/plugins/'

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'

# TODO I am considering not using any themes since
# they do not support light/dark mode
# set -g @plugin 'jimeh/tmux-themepack'

# tmux-yank allows yanking using 'y', and text is put into system clipboard
# [lgreen] 7/13/20: Tried removing this thinking it was not needed for newer Tmux verions
# but testing showed it was still needed (tested macOS->SSH->WSL->Tmux)
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize plugin manager
if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && \
         ~/.tmux/plugins/tpm/bin/install_plugins'"
run -b '~/.tmux/plugins/tpm/tpm'
# }}}

# Vim Folding Marker {{{
# vim: fdm=marker
# }}}
