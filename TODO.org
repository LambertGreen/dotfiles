#+title: TODOs for Dotfiles Project

* TODOs
** Open [0/5]
*** TODO Consider using =make= or =just= file for machine setup
This may be the way to address the below TODO items i.e. machine setup and updating.
*Note* =just= can is cross-platform so it may serve as a good option to handle all platforms.
*** TODO Add section with steps for setting a new machine [0/2]
Till recently the steps were pretty straight-forward i.e. just sync repo; install apps with package-manager; run =stow=. However doing a brand-new install is not that straight-forward e.g. bulk installing apps requires some manual work e.g. editing a reference package-manager file from exports; ensuring ~.config~ directory is created first before running =stow=; etc.  Further there is OS specific considerations as well.

**** [ ] Use =org-babel= blocks so that manual steps are copy/paste.
**** [ ] Use scripts were applicable
*** TODO Add steps/scripts for updating packages
**** Description
I have being remembering the commands to run to make the primary package manager run its update e.g. ~brew update~, ~pacman -Syu~, ~scoop update~.  However sometimes there is more than one package manager in use e.g. ~home-manager~ on Linux work machine.  Maybe we need a script wrapper that does the right thing to update a particular system?

***** An example of a complex update on the Linux machine:
1. Update system and installed packages using ~sudo yum update~
2. Update =Nix= and installed packages using ~nix-channel --update~
3. Update =HomeManager= packages using ~home-manager switch~

***** An example of multiple updates on Windows machine:
1. Update system using =Windows Update= (fortunately this is already automatic)
2. Update =Scoop= and installed packages using ~scoop update~
3. Update =Msys2= and installed packages using ~pacman -Syu~
4. Update =Choco= and installed packages using ~choco update~
5. For each =WSL= instance update that Linux distribution.
**** Investigation
***** [X] Consider using =topgrade=
CLOSED: [2023-02-02 Thu 13:05]
**** Solution Proposals
***** Create update shell functions
*** TODO Add =fortune= to =nvim= startup screen
**** Description
+ Reference: https://www.reddit.com/r/neovim/comments/pj99r4/alphanvim_lua_powered_startup_screen/

*** TODO Add app for doing presentations
**** Requirements [0/2]
***** [ ] Show mouse cursor
***** [ ] Zoom in/out

** Completed [10/10]
*** By OS Platform [0/0]
**** Windows [4/4]
***** DONE Consider if =dploy= can be replaced by [[https://github.com/ralish/PSDotFiles][PSDotFiles]] or =Msys GNU Stow=
CLOSED: [2023-05-22 Mon 22:27]
+ Yes, we can use =stow= from =msys=
***** DONE Address issue where SSH-Agent will not work in =Windows=
CLOSED: [2023-05-22 Mon 22:32]
The steps to get =git= working fine with =ssh= in =Windows= are:
1. The ~Windows OpenSSH Agent~ service must be changed from status ~disabled~ to ~enabled~ and set to start automatically.
2. Git must be configured to use the Windows SSH executable:
#+begin_src ps
git config --global core.sshCommand C:/Windows/System32/OpenSSH/ssh.exe
#+end_src

*Update (3/31/22)*: there is a long standing issue with the Windows SSH. Recommendation is to install OpenSSH via =Scoop=/=Choco=.
***** DONE Address that =Powershell= needs modules to be installed
CLOSED: [2023-05-22 Mon 22:38]
****** Description
#+begin_src powershell
Install-Module -Name PSReadLine -Scope CurrentUser
Install-Module -Name PSFzf -Scope CurrentUser
#+end_src
Note: modules ~z, get-childitemcolor~ require the parameter ~-AllowClobber~ as well.
Note: alternatively we could check-in the modules into this repository given they will show up under the symlinked =WindowsPowerShell= directory.
****** Solution
The module installation was added to ~./setup_win/setup.ps1~
***** DONE Disable =Office= key hijacking of =Hyper=
CLOSED: [2023-05-22 Mon 23:02]
****** Description
******* Disable the single press Office key registration
#+begin_src bat
REG ADD HKCU\Software\Classes\ms-officeapp\Shell\Open\Command /t REG_SZ /d rundll32
#+end_src

******* The real disable
#+begin_src sh
git clone https://github.com/LambertGreen/OfficeKeyFix
#+end_src
****** Solution
+ Added a function to powershell setup script

**** macOS [1/1]
***** DONE Add steps for setting up apps that don't have =dotfiles= support e.g. =Alfred=
CLOSED: [2023-05-22 Mon 21:05]
+ Added ~alfred-settings~ as a sub-module.
*** DONE Test reproducibility by using =Docker=
CLOSED: [2021-06-02 Wed 16:05]
*** DONE Fix first start of =Nvim= to no show errors
CLOSED: [2021-06-02 Wed 21:33]
*** DONE Replace individual per package calls with combined single line installs
CLOSED: [2022-03-29 Tue 16:52]
For example ~scoop p1 p2 p3~
*** DONE Consider adding =Chemacs2= and =Doom= as sub-modules
CLOSED: [2021-12-14 Tue 20:08]
So that simply doing ~stow emacs~ get things all done, or provide shorter setup blocks.

**** Notes
I have already added =Chemacs2= as a submodule, and it was convenient, so I think we should simply add =Doom= as well. But then what about =Spacemacs=?

*** DONE Add package manager export files for your machines [4/4]
CLOSED: [2021-12-14 Tue 20:08]
   Let's add these as a quick backup of existing installed applications.
**** [X] Add =Brewfile= for MacBook Air
CLOSED: [2021-12-14 Tue 20:08]
**** [X] Add =Brewfile= for MacBook Pro
CLOSED: [2021-12-14 Tue 20:08]
**** [X] Add =Scoop= export file for Windows Gaming rig
CLOSED: [2021-12-14 Tue 20:08]
**** [X] Add =Brewfile= for Ubuntu WSL machine
CLOSED: [2021-12-14 Tue 20:08]
*** DONE Add =Nix= files to the repo
CLOSED: [2022-08-17 Wed 11:32]
*** DONE Update steps to setup =SSH= first so that ~git submodule~ command will work (i.e. use the =sshagent= instead of failing accessing the SSH key)
CLOSED: [2023-05-22 Mon 15:53]
*** DONE Add application install steps/scripts (Decision: no, rather use existing bulk install instructions)
CLOSED: [2023-06-05 Mon 12:19]
**** Description
While we have simplified install and setup for most applications e.g. ~stow nvim && brew install nvim~ some applications require one to register the provider in the package manager e.g. installing a =scoop= bucket or installing a =brew= tap. It is not easy to remember that installing =emacs= on macOS requires: ~brew tap d12frosted/emacs-plus && brew install emacs-plus~
**** Solution Proposals
***** Add install instructions inside this README
***** Add install shell script functions
***** Use the bulk install method, but with editing the file for the specific apps one wants to install
**** Solution
+ We will go with adding instructions in the README since seems like the best place to start. We can always go from there to putting the info into a script function.

*Update*: Silly you!  You wasted time opening the story when a solution was already in place i.e. use the bulk import files for each package manager! So, what if you only want to install a single application: you can still delete all the other entries in the import file!

*Update*: Actually maybe I should instead consider the fact that when I really needed to install a single application the bulk method did not come to mind, and a better README would have an "install emacs" section.  So what it is also in the bulk import file.  Notice that you have a "List of used applications" section... why? It would be better if the list was there from the install instructions.

*Update*: Well, I have gone full circle, and found that the bulk install is a good option after all... *shrug*. There are pros/cons for the options. Considering that more often than not we need to setup dotfiles in monolithic manner and not piecemeal we choose the bulk setup approach.
*** DONE Issue: =Sub-modules= sometimes are not updated and need manual intervention
CLOSED: [2023-07-10 Mon 12:13]
I am not sure what the cause is but the following steps help to pull down latest from within the sub-module directory:
#+begin_src sh
git reset --hard HEAD
git pull
#+end_src

*** DONE Issue: If ~.config~ directory does not exist then first stow of package under ~.config~ will make ~.config~ a symlink
CLOSED: [2023-07-10 Mon 12:27]
**** Description
The issue does not occur if there is an existing ~.config~ directory
**** Solution
+ First ensure an existing ~.config~ directory exists, before running the =stow= command.
+ We need to add information in this document with the setup steps for a new machine.
