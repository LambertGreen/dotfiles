# Multi-stage Dockerfile for Ubuntu dotfiles testing
# Usage:
#   docker build --target base -t dotfiles-ubuntu-base .
#   docker build --target bootstrap-basic -t dotfiles-ubuntu-bootstrap-basic .
#   docker build --target stow-basic -t dotfiles-ubuntu-stow-basic .
#   docker build --target install-basic -t dotfiles-ubuntu-install-basic .
#   docker build --target update-basic -t dotfiles-ubuntu-update-basic .

# =============================================================================
# BASE STAGE - Common system setup for all Ubuntu tests
# =============================================================================
FROM ubuntu:22.04 AS base

# Install minimal packages for dotfiles testing + realistic system defaults
RUN apt-get update --quiet && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
      sudo git openssh-client wget curl ca-certificates build-essential \
      bash zsh && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Copy and run bootstrap install scripts
COPY --chown=root:root bootstrap/install-stow-ubuntu.sh /tmp/install-stow-ubuntu.sh
COPY --chown=root:root bootstrap/install-just-ubuntu.sh /tmp/install-just-ubuntu.sh
RUN chmod +x /tmp/install-stow-ubuntu.sh /tmp/install-just-ubuntu.sh && \
    /tmp/install-stow-ubuntu.sh && \
    /tmp/install-just-ubuntu.sh && \
    rm -f /tmp/install-stow-ubuntu.sh /tmp/install-just-ubuntu.sh

SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Create a test user
RUN useradd -u 1000 --create-home --comment "Ubuntu dotfiles user" user && \
    usermod -aG sudo user && \
    echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    echo 'user:user' | chpasswd

USER user
ENV HOME=/home/user

# Create directory structure
RUN mkdir -p ~/dev/my/dotfiles

# =============================================================================
# CONFIGURE STAGE - Environment setup (first step)
# =============================================================================
FROM base AS configure

# Copy configure script and justfile for validation
COPY --chown=user:user configure.sh /home/user/dev/my/dotfiles/configure.sh
COPY --chown=user:user justfile /home/user/dev/my/dotfiles/justfile
COPY --chown=user:user tools/ /home/user/dev/my/dotfiles/tools/
WORKDIR /home/user/dev/my/dotfiles

# Health check before configure (should show not configured)
RUN echo "üîç Pre-configure health check (expecting not configured error)..." && \
    (just health-check || echo "‚úÖ Expected error: Not configured") && \
    echo "Proceeding with configuration..."

# Configure for ubuntu basic (non-interactive)
RUN echo "‚öôÔ∏è Configuring for ubuntu basic..." && \
    echo -e "Y\n1\n1" | ./configure.sh && \
    echo "‚úÖ Configuration complete"

# Health check after configure (should show no packages stowed)
RUN echo "üîç Post-configure health check..." && \
    (just health-check || echo "‚úÖ Expected EMPTY state after configure") && \
    echo "‚úÖ Post-configure validation complete"

CMD ["/bin/bash"]

FROM base AS configure-typical

# Copy configure script and justfile for validation
COPY --chown=user:user configure.sh /home/user/dev/my/dotfiles/configure.sh
COPY --chown=user:user justfile /home/user/dev/my/dotfiles/justfile
COPY --chown=user:user tools/ /home/user/dev/my/dotfiles/tools/
WORKDIR /home/user/dev/my/dotfiles

# Health check before configure (should show not configured)
RUN echo "üîç Pre-configure health check (expecting not configured error)..." && \
    (just health-check || echo "‚úÖ Expected error: Not configured") && \
    echo "Proceeding with configuration..."

# Configure for ubuntu typical (non-interactive)
RUN echo "‚öôÔ∏è Configuring for ubuntu typical..." && \
    echo -e "Y\n2" | ./configure.sh && \
    echo "‚úÖ Configuration complete"

# Health check after configure (should show no packages stowed)
RUN echo "üîç Post-configure health check..." && \
    (just health-check || echo "‚úÖ Expected EMPTY state after configure") && \
    echo "‚úÖ Post-configure validation complete"

CMD ["/bin/bash"]

# =============================================================================
# BOOTSTRAP STAGES - Tool installation by level
# =============================================================================
FROM configure AS bootstrap-basic

COPY --chown=user:user bootstrap/ /home/user/dev/my/dotfiles/bootstrap/
WORKDIR /home/user/dev/my/dotfiles/bootstrap

RUN echo "üöÄ Running basic bootstrap..." && \
    just bootstrap-basic-ubuntu

# Validate bootstrap with health check
RUN echo "üîç Post-bootstrap health check..." && \
    cd /home/user/dev/my/dotfiles && \
    (just health-check || echo "‚úÖ Expected EMPTY state after bootstrap") && \
    command -v apt && \
    echo "‚úÖ Bootstrap validation complete"

CMD ["/bin/bash"]

FROM configure-typical AS bootstrap-typical

COPY --chown=user:user bootstrap/ /home/user/dev/my/dotfiles/bootstrap/
WORKDIR /home/user/dev/my/dotfiles/bootstrap

RUN echo "üöÄ Running typical bootstrap..." && \
    just bootstrap-typical-ubuntu

# Validate bootstrap with health check
RUN echo "üîç Post-bootstrap health check..." && \
    cd /home/user/dev/my/dotfiles && \
    (just health-check || echo "‚úÖ Expected EMPTY state after bootstrap") && \
    command -v apt && \
    command -v brew && \
    echo "‚úÖ Bootstrap validation complete"

CMD ["/bin/bash"]

FROM base AS bootstrap-max

COPY --chown=user:user bootstrap/ /home/user/dev/my/dotfiles/bootstrap/
WORKDIR /home/user/dev/my/dotfiles/bootstrap

RUN echo "üöÄ Running max bootstrap..." && \
    just bootstrap-max-ubuntu

# Validate bootstrap
RUN echo "üîç Validating max bootstrap..." && \
    command -v apt && \
    command -v brew && \
    command -v nix && \
    echo "‚úÖ Max bootstrap validation complete"

CMD ["/bin/bash"]

# =============================================================================
# STOW STAGES - Config deployment by level
# =============================================================================
FROM bootstrap-basic AS stow-basic

# Add all configs for stowing
COPY --chown=user:user configs/ /home/user/dev/my/dotfiles/configs/
COPY --chown=user:user justfile /home/user/dev/my/dotfiles/justfile
COPY --chown=user:user tools/ /home/user/dev/my/dotfiles/tools/

# Run stow via platform-specific justfile
WORKDIR /home/user/dev/my/dotfiles/configs
RUN echo "üîó Running basic stow..." && \
    just -f justfile_ubuntu stow-basic

# Validate the stow setup worked
WORKDIR /home/user/dev/my/dotfiles
RUN echo "üß™ Validating basic stow with health check..." && \
    echo "üìã Running dotfiles health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "‚úÖ Basic stow validation completed successfully"

CMD ["/bin/bash"]

FROM bootstrap-typical AS stow-typical

# Add all configs for stowing
COPY --chown=user:user configs/ /home/user/dev/my/dotfiles/configs/
COPY --chown=user:user justfile /home/user/dev/my/dotfiles/justfile
COPY --chown=user:user tools/ /home/user/dev/my/dotfiles/tools/

# Run stow via platform-specific justfile
WORKDIR /home/user/dev/my/dotfiles/configs
RUN echo "üîó Running typical stow..." && \
    just -f justfile_ubuntu stow-typical

# Validate the stow setup worked
WORKDIR /home/user/dev/my/dotfiles
RUN echo "üß™ Validating typical stow with health check..." && \
    echo "üìã Running dotfiles health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "‚úÖ Typical stow validation completed successfully"

CMD ["/bin/bash"]

# =============================================================================
# INSTALL STAGES - Package installation by level
# =============================================================================
FROM stow-basic AS install-basic

# Pre-install health check (should show packages ready for install)
RUN echo "üîç Pre-install health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "Proceeding with package installation..."

# Run install via new tool-based package management
RUN echo "üì¶ Running basic install with new tool..." && \
    cd /home/user/dev/my/dotfiles && \
    just install

# Post-install health check (should show system ready)
RUN echo "üîç Post-install health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "‚úÖ Install validation complete"

CMD ["/bin/bash"]

FROM stow-typical AS install-typical

# Pre-install health check
RUN echo "üîç Pre-install health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "Proceeding with package installation..."

# Run install via new tool-based package management
RUN echo "üì¶ Running typical install with new tool..." && \
    cd /home/user/dev/my/dotfiles && \
    just install

# Post-install health check
RUN echo "üîç Post-install health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "‚úÖ Install validation complete"

CMD ["/bin/bash"]

# =============================================================================
# UPDATE STAGES - Complete workflow (bootstrap + stow + install + update)
# =============================================================================
FROM install-basic AS update-basic

# Pre-update health check
RUN echo "üîç Pre-update health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "Proceeding with package updates..."

# Run update via new tool-based package management
RUN echo "üîÑ Running basic update with new tool..." && \
    cd /home/user/dev/my/dotfiles && \
    just update

# Post-update health check (final validation)
RUN echo "üîç Post-update health check (final validation)..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "‚úÖ Complete workflow validation successful"

CMD ["/bin/bash"]

FROM install-typical AS update-typical

# Pre-update health check
RUN echo "üîç Pre-update health check..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "Proceeding with package updates..."

# Run update via new tool-based package management
RUN echo "üîÑ Running typical update with new tool..." && \
    cd /home/user/dev/my/dotfiles && \
    just update

# Post-update health check (final validation)
RUN echo "üîç Post-update health check (final validation)..." && \
    cd /home/user/dev/my/dotfiles && \
    just health-check && \
    echo "‚úÖ Complete workflow validation successful"

CMD ["/bin/bash"]