# Four-stage architecture test Dockerfile
# Tests the new system-admin/system-user/dev/app package management flow
# Usage: docker build -f Dockerfile.four-stage --target <stage> .

FROM ubuntu:22.04 AS base

# Install minimal system requirements
RUN apt-get update --quiet && \
    DEBIAN_FRONTEND=noninteractive apt-get install --no-install-recommends -y \
      sudo git openssh-client wget curl ca-certificates build-essential \
      bash zsh locales less && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    useradd -u 1000 --create-home --comment "Test user" user && \
    usermod -aG sudo user && \
    echo "user ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers && \
    echo 'user:user' | chpasswd && \
    locale-gen en_US.UTF-8 && \
    update-locale LANG=en_US.UTF-8

# Switch to user
USER user
WORKDIR /home/user
ENV LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 LANGUAGE=en_US:en

# Copy dotfiles
COPY --chown=user:user . /home/user/dotfiles
WORKDIR /home/user/dotfiles

# =============================================================================
# STAGE 1: CHECK-SYSTEM - Updates package registries
# =============================================================================
FROM base AS check-system
RUN echo "===== STAGE: check-system =====" && \
    ./scripts/package-management/check-system-packages.sh && \
    echo "===== check-system COMPLETE ====="

# =============================================================================
# STAGE 2: INSTALL-SYSTEM-ADMIN - Install admin packages (requires sudo)
# =============================================================================
FROM check-system AS install-system-admin
RUN echo "===== STAGE: install-system-admin =====" && \
    ./configure.sh --non-interactive --machine-class docker_developer_ubuntu && \
    ./bootstrap.sh && \
    ./scripts/package-management/brew/install-brew-packages.sh admin && \
    echo "===== install-system-admin COMPLETE ====="

# =============================================================================
# STAGE 3: INSTALL-SYSTEM-USER - Install user packages (no sudo)
# =============================================================================
FROM install-system-admin AS install-system-user
RUN echo "===== STAGE: install-system-user =====" && \
    ./scripts/package-management/brew/install-brew-packages.sh user && \
    echo "===== install-system-user COMPLETE ====="

# =============================================================================
# STAGE 4: INSTALL-DEV - Install development language packages
# =============================================================================
FROM install-system-user AS install-dev
RUN echo "===== STAGE: install-dev =====" && \
    # For now, we'll use init-dev-packages which handles npm, pip, etc.
    # Later we'll split this properly
    echo "TODO: Install npm, pip, cargo, gem packages" && \
    echo "===== install-dev COMPLETE ====="

# =============================================================================
# STAGE 5: INSTALL-APP - Install application packages (zsh, emacs, nvim)
# =============================================================================
FROM install-dev AS install-app
RUN echo "===== STAGE: install-app =====" && \
    ./scripts/package-management/init-dev-packages.sh && \
    echo "===== install-app COMPLETE ====="

# =============================================================================
# FINAL: Complete four-stage test
# =============================================================================
FROM install-app AS final
RUN echo "===== FINAL VALIDATION =====" && \
    ./scripts/health/dotfiles-health.sh && \
    ./scripts/package-management/show-package-stats.sh && \
    echo "===== ALL STAGES COMPLETE ====="
