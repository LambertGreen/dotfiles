#!/usr/bin/env bash

# Set uname
if [[ -z "$UNAME" ]]; then
    UNAME=$(uname -s)
    export UNAME
fi

#----------
# Functions
#----------

SetupFzf() {
    # Setup FZF to use fd
    export FZF_DEFAULT_COMMAND='fd --type f --hidden --no-ignore-vcs'
}

SetupPerforceCong(){
    # Perforce config
    export P4CONFIG=.p4config
}

StartSshAgent() {
    if [ "$UNAME" = "Darwin" ]; then
        # Keychain to start ssh-agent
        eval "$(keychain --nogui --quiet --quick --eval id_rsa)"
    else
        if [ -x "$(command -v keychain)" ]; then
            eval `keychain --nogui --quiet --quick --eval id_rsa`
            source "$HOME/.keychain/$(hostname)-sh"
        fi
    fi
}

SetupDevEnvPython() {
    export PYENV_ROOT="$HOME/.pyenv"
    export PATH="$PYENV_ROOT/bin:$PATH"
    if [ -x "$(command -v pyenv)" ]; then
        eval "$(pyenv init -)"
        eval "$(pyenv virtualenv-init -)"
    fi
}

SetupDevEnvJava () {
    if [ -d "$HOME/.jenv/bin" ]; then
        export PATH="$HOME/.jenv/bin:$PATH"
        eval "$(jenv init -)"
    fi
}

SetupDevEnvNode () {
    export NVM_DIR="$HOME/.nvm"
    [ -s "/usr/local/opt/nvm/nvm.sh" ] && source "/usr/local/opt/nvm/nvm.sh"
    [ -s "/usr/local/opt/nvm/etc/bash_completion" ] && source "/usr/local/opt/nvm/etc/bash_completion"
}

SetupDevEnvRust () {
    export PATH="$PATH:$HOME/.cargo/bin"
}

SetupDevEnvRuby () {
    export PATH="$PATH:$HOME/.rvm/bin"
    # Source Ruby Version Manager
    [ -s "$HOME/.rvm/scripts/rvm" ] && source "$HOME/.rvm/scripts/rvm"
}

SetupDevEnvGo () {
    export GOPATH="${HOME}/.go"
    export GOROOT="$(brew --prefix golang)/libexec"
    export PATH="$PATH:${GOPATH}/bin:${GOROOT}/bin"
    test -d "${GOPATH}" || mkdir "${GOPATH}"
    test -d "${GOPATH}/src/github.com" || mkdir -p "${GOPATH}/src/github.com"
}

SetupDevEnvClang() {
    if [ "$UNAME" = "Darwin" ]; then
        export PATH=$PATH:/usr/local/Cellar/llvm/9.0.0_1/lib/cmake/clang
        export Clang_DIR=/usr/local/Cellar/llvm/9.0.0_1/lib/cmake/clang
    else
        export PATH=/usr/local/clang_9.0.0/bin:$PATH
        export LD_LIBRARY_PATH=/usr/local/clang_9.0.0/lib:$LD_LIBRARY_PATH
    fi
}

TimeShell() {
  for _ in $(seq 1 10); do time "$@" -i -c exit; done
}

ColorTest() {
    #   Copied from http://tldp.org/HOWTO/Bash-Prompt-HOWTO/x329.html
    T='gYw'   # The test text

    echo -e "\n                 40m     41m     42m     43m\
        44m     45m     46m     47m";

    for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' \
        '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' \
        '  36m' '1;36m' '  37m' '1;37m';
        do FG=${FGs// /}
            echo -en " $FGs \033[$FG  $T  "
            for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
            do echo -en "$EINS \033[$FG\033[$BG  $T  \033[0m";
            done
            echo;
        done
        echo
}

RunEmacs () {
    if [ "$UNAME" = "Darwin" ]; then
        emacsclient -a ""  $1
    else
        emacsclient --user '' -a "" $1
    fi
}

RunGradlew () {
    ./gradlew "$@"
}

SourceOsProfile() {

    if [ "$UNAME" = "Linux" ]; then
        # shellcheck source=shell_linux
        [ -f "$HOME/.shell_linux" ] && source "$HOME/.shell_linux"
    else
        true
    fi

    if [ "$UNAME" = "Darwin" ]; then
        # shellcheck source=shell_osx
        [ -f "$HOME/.shell_osx" ] && source "$HOME/.shell_osx"
    else
        true
    fi
}

SetupFzf
SetupPerforceCong
SourceOsProfile
SetupDevEnvPython
SetupDevEnvClang
StartSshAgent

#----------
# Aliases
#----------
alias vim=nvim
alias vi=nvim
alias g=git
alias b=brew
alias e=RunEmacs
alias gw=RunGradlew

# Finally source any local config
[ -f "$HOME/.shell_local" ] && source "$HOME/.shell_local"
