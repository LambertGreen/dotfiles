#!/usr/bin/env bash

lgreen_setup-local-bin() {
    if [ -d "$HOME/local/bin" ]; then
        export PATH="$HOME/local/bin":$PATH
    fi
}

lgreen_setup-sss-preload-when-on-domain() {
    echo $HOME | grep -q "/tsi/"
    if [ $? ]; then
        if [ -f "/lib64/libnss_sss.so.2" ]; then
            export LD_PRELOAD=/lib64/libnss_sss.so.2
        fi
    fi
}

lgreen_setup-nix-profile() {
    if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then
        source $HOME/.nix-profile/etc/profile.d/nix.sh

        # We need to set the locale archive as home-manager has
        # issues finding locale without it
        #
        # Update (9/14/22): The locale issue is indeed nix related
        # however we will try the fix mentionded here:
        # https://github.com/nix-community/home-manager/issues/354
        #
        export LOCALE_ARCHIVE=$(nix-build '<nixpkgs>' -A glibcLocales)/lib/locale/locale-archive
    fi
}

lgreen_setup-homebrew-on-linux() {
    if [ -f "/home/linuxbrew/.linuxbrew/bin/brew" ]; then
        # TODO: Find a long-term fix for PATH env setting and build systems
        #
        #Instead of prepending linuxbrew we instead append it to
        # the PATH so as not to disrupt some builds that need the
        # system loader first in the path.
        #export PATH="$PATH:/home/linuxbrew/.linuxbrew/bin"

        # Homebrew writes out an error if the system versions of curl and git are
        # old (this happens on CentOS 7). However I ran into issues when I installed
        # these binaries via another package manager (e.g. nix/home-manager), where Homebrew
        # could not find the cacerts.  So the workaround is to temporarily disable SSL checking
        # for both curl and git (https://github.com/Linuxbrew/brew/wiki/FAQ#why-does-curl-fail), then
        # use Homebrew to download latest versions, and removing the workaround, then pointing
        # Homebrew to these versions.
        export HOMEBREW_CURL_PATH=/home/linuxbrew/.linuxbrew/bin/curl
        export HOMEBREW_GIT_PATH=/home/linuxbrew/.linuxbrew/bin/git

        # The below will update the shell environment:
        # - Add some HOMEBREW environment variables
        # - Update PATH, MANPATH, INFOPATH to have linuxbrew paths prepended
        eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
    fi
}

lgreen_setup-perl() {
    if [ -d "$HOME/perl5/lib/perl5" ]; then
        eval "$(perl -I"$HOME/perl5/lib/perl5" -Mlocal::lib="$HOME/perl5")"
    fi
}

lgreen_setup-umask-for-wsl() {
    if [[ "$(< /proc/version)" = *microsoft* ]]; then
        # Note: WSL does not currently apply umask properly.
        if [ "$(umask)" = "0000" ]; then
            umask 022
        fi
    fi
}

lgreen_setup-display-for-wsl() {
    if [[ "$(< /proc/version)" = *icrosoft* ]]; then
        DISPLAY=$(grep nameserver /etc/resolv.conf | awk '{print $2; exit;}'):0.0
        export DISPLAY
    fi
}

lgreen_setup-fix-wsl2-interop() {
    # Issue: https://github.com/microsoft/WSL/issues/5065
    if [[ "$(< /proc/version)" = *microsoft* ]]; then
        for i in $(pstree -np -s $$ | grep -o -E '[0-9]+'); do
            if [[ -e "/run/WSL/${i}_interop" ]]; then
                export WSL_INTEROP=/run/WSL/${i}_interop
            fi
        done
    fi
}

lgreen_setup-add-windows-path-to-wsl() {
    if [[ "$(< /proc/version)" = *microsoft* ]]; then
        if [ -n "${WSLPATH}" ]; then
            export PATH="$PATH:$WSLPATH"
        fi
    fi
}

lgreen_setup-xdg-config() {
    if [ -z "${XDG_RUNTIME_DIR}" ]; then
         XDG_RUNTIME_DIR=/run/user/$(id -ru)
         export XDG_RUNTIME_DIR
    fi
}

lgreen_setup-package-config() {
    if [ -d "/usr/share/pkgconfig" ]; then
        export PKG_CONFIG_PATH="/usr/share/pkgconfig:$PKG_CONFIG_PATH"
    fi
}

lgreen_setup-sss-preload-when-on-domain
lgreen_setup-package-config
lgreen_setup-umask-for-wsl
lgreen_setup-display-for-wsl
lgreen_setup-fix-wsl2-interop
lgreen_setup-add-windows-path-to-wsl
lgreen_setup-nix-profile
lgreen_setup-homebrew-on-linux
lgreen_setup-local-bin
lgreen_setup-perl

# TODO: Consider if the below is needed at all for Centos7.  It causes issues on WSL Ubuntu,
# hence commenting it out for now.
# lgreen_setup-xdg-config
